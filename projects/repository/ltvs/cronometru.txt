//
//
//      DEVELOPED BY: Relea Florin Iacob
//
//
#include <stdint.h>
#include "TouchScreen.h"
#include <Adafruit_TFTLCD.h> // Hardware-specific library
// define - start
    #define LCD_CS A3
    #define LCD_CD A2
    #define LCD_WR A1
    #define LCD_RD A0
    // optional
    #define LCD_RESET A4
    #define YP A1  // must be an analog pin, use "An" notation!
    #define XM A2  // must be an analog pin, use "An" notation!
    #define YM 7   // can be a digital pin
    #define XP 6   // can be a digital pin
    #define TS_MINX 150
    #define TS_MINY 120
    #define TS_MAXX 920
    #define TS_MAXY 940
    #define MINPRESSURE 10
    #define MAXPRESSURE 1000
    TouchScreen ts = TouchScreen(XP, YP, XM, YM, 300);
    Adafruit_TFTLCD tft(LCD_CS, LCD_CD, LCD_WR, LCD_RD, LCD_RESET);
    // Assign human-readable names to some common 16-bit color values:
    #define  BLACK   0x0000
    #define BLUE    0x001F
    #define RED     0xF800
    #define GREEN   0x07E0
    #define CYAN    0x07FF
    #define MAGENTA 0xF81F
    #define YELLOW  0xFFE0
    #define WHITE   0xFFFF
// define - finish
//functions - start
unsigned long showcolor(char color[]){
       tft.setTextColor(color);
       for(int i=0;i<=4;i++){
         tft.print(0);
         delay(50);
         tft.print(1);
         delay(20);  
       }
}
void screen1(){
  for( int y=0;y<=2;y++){
  showcolor(BLUE);
  showcolor(RED);
  showcolor(GREEN);
  showcolor(CYAN);
  showcolor(MAGENTA);
  showcolor(YELLOW);
  showcolor(WHITE);
  }
}
void startup(){
  tft.begin(0x9341);
  // tft.setRotation(1);
  tft.fillScreen(BLACK);
  tft.setTextSize(3);
  tft.setTextColor(WHITE);
  tft.setCursor(0,0);
}
void loading(){
  tft.setTextSize(4);
  tft.setTextColor(WHITE);
  tft.setCursor(35,140);
  tft.print("Loading");
  tft.drawRect(65,178,100,35,WHITE);
  delay(700);
  tft.fillRect(70,180,10,30,WHITE);
  delay(700);
  tft.fillRect(85,180,10,30,WHITE);
  delay(700);
  tft.fillRect(100,180,10,30,WHITE);
  delay(700);
  tft.fillRect(115,180,10,30,WHITE);
  delay(700);
  tft.fillRect(130,180,10,30,WHITE);
  delay(700);
  tft.fillRect(145,180,10,30,WHITE);
  delay(600);
}
// BUTTONS
void btnRedPressed(){
  tft.fillCircle(40,275,40,BLACK);
  tft.fillCircle(40,275,40,WHITE);
  tft.fillCircle(40,275,30,RED);
}
void btnRedNormal(){
  tft.fillCircle(40,275,40,BLACK);
  tft.drawCircle(40,275,40,WHITE);
  tft.fillCircle(40,275,39,RED);
}
void btnGreenNormal(){
  tft.fillCircle(197,275,40,BLACK);
  tft.drawCircle(197,275,40,WHITE);
  tft.fillCircle(197,275,39,GREEN);
}
void btnGreenPressed(){
  tft.fillCircle(197,275,40,BLACK);
  tft.fillCircle(197,275,40,WHITE);
  tft.fillCircle(197,275,30,GREEN);
}
// BUTTONSS - FINISH
void speedmeter(){
  tft.fillScreen(BLACK);
  tft.setTextSize(4);
  tft.setTextColor(WHITE);
  tft.setCursor(0,0);
  tft.print("Cronometru");
  btnRedNormal();
  btnGreenNormal();
}
int viteza = 0;
void numberUpdate(){
  if(viteza<0){viteza=0;}
  tft.setTextSize(4);
  tft.setCursor(100, 130);
  tft.setTextColor(WHITE);
  tft.print(viteza);
  delay(1000);
  tft.setCursor(100, 130);
  tft.setTextColor(BLACK);
  tft.print(viteza);
}
void functieViteza(){
     digitalWrite(13, HIGH);
     TSPoint p = ts.getPoint();
     digitalWrite(13, LOW);
     pinMode(XM, OUTPUT);
     pinMode(YP, OUTPUT);
     p.x = map(p.x, TS_MINX, TS_MAXX, tft.width(), 0);
     p.y = map(p.y, TS_MINY, TS_MAXY, tft.height(), 0);
     if (p.z > MINPRESSURE && p.z < MAXPRESSURE){
         if(p.x > 160 && p.y < 110){
            btnRedPressed();
            viteza = 0;
            numberUpdate();
            delay(1000);
            btnRedNormal();
            }
         if(p.x > 160 && p.x <230 && p.y > 190){
            btnGreenPressed();
            for(;;viteza++){
            numberUpdate();
           digitalWrite(13, HIGH);
           TSPoint p = ts.getPoint();
           digitalWrite(13, LOW);
           pinMode(XM, OUTPUT);
           pinMode(YP, OUTPUT);
            Serial.println(p.y);
                if(p.x < 320 && p.y>600){
                   btnRedPressed();
                   viteza=0;
                   btnGreenNormal();
                   delay(1000);
                   btnRedNormal();
                   return 0;
                   }
            }
            btnGreenNormal();
         }
     }
}
//functions - finish

//display x=240px; y=320px;
    void setup(void){
        /*
        screen1();
        */
        startup();
        loading();
        tft.reset();
        startup();
        speedmeter();
    }
    void loop(){
    functieViteza();
    }
